output module

0, functionninterface
void outputModule (int** scheduleMatrix,  enum SCHEDULING_ALGORITHM algorithm);


1, functionality:
analyse the schedule matrix, and get the analysis report.


2, input:
(1) global variable:
1' user name array:   char** g_nameMap;  int g_userNum;  ---- get the name of users by user index
2' appointment information array:  struct SAppointment *g_appointmentArray, int g_apNum;  ---- get the information of appointment by appointment index
3' valid time range:  struct STime g_startTime, g_endTime; ---- the valid time range of the program

(2) function parameter list
1' algorithm.
 enum SCHEDULING_ALGORITHM algorithm
ps: get the algorithm name by invoke method:
char* get_SchedingAlgorithm_name (enum SCHEDULING_ALGORITHM algorithm);


2' schedule matrix
int** scheduleMatrix

format definition:
scheduleMatrix[userIndex][apIndex] = response

row:
the index of user
maximum length -- total number of users: g_userNum
column:
the index of appointment
maximum length -- total number of appointments: g_apNum
element:
scheduleMatrix[i][j]: the response of user i to appointment j
1 -- accecpt, 0 -- reject, -1 -- not included

example:
  -1    1    0
   1    0    0
   1   -1   -1
result: one valid appointment 0  including user 1, 2
        two rejected appointment 1,2



3, output: check the sample int the project specification
summary: three part.
(1), appointment schedule: personal schedule (time type people) for all users
(2), reject list:
(3), performance analysis
format:
.txt file called Ggg_02_"ALGORITHM".txt


4, requirement
submit the original code and test code & data together.